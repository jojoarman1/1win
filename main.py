import asyncio
import logging
import os
import random
import traceback

from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

API_TOKEN = '7050738799:AAEUaTmFNYu3zKbesc8MapZI_w0zhM3SC6s'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
photo_directory = "Signal/"

is_registered = False
is_valid_registration_id = False


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def check_subscription(user_id):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∫–∞–Ω–∞–ª–µ
        chat_member = await bot.get_chat_member(chat_id=-1001865221905, user_id=user_id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ
        if chat_member.status in ['administrator', 'member', 'creator']:
            return True  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª
        else:
            return False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏:", e)
        return False  # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    user_name = message.from_user.first_name
    welcome_message = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n\n–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ - –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ü§ù"
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url="https://t.me/+A1m5z86gf5BkNmUy"))
    keyboard.add(InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription"))
    await message.answer(welcome_message, reply_markup=keyboard)


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'check_subscription')
async def check_subscription_callback(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    if await check_subscription(user_id):
        keyboard = InlineKeyboardMarkup()
        keyboard.row(
            InlineKeyboardButton("üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="registration"),
            InlineKeyboardButton("üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction")
        )
        keyboard.add(InlineKeyboardButton("üí£ –ü–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª", callback_data="signal"))
        menu_text = (
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî∏HAKERMINES V3.0üî∏!\n\n"
            "üí£Mines - —ç—Ç–æ –≥—ç–º–±–ª–∏–Ω–≥ –∏–≥—Ä–∞ –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ 1win, –∫–æ—Ç–æ—Ä–∞—è –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º ‚Äú–°–∞–ø—ë—Ä–µ‚Äù.\n"
            "–í–∞—à–∞ —Ü–µ–ª—å - –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —è—á–µ–π–∫–∏ –∏ –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å—Å—è –≤ –ª–æ–≤—É—à–∫–∏.\n\n"
            "`\n"
            "–ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç OpenAI.\n"
            "–û–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–≤—ë–∑–¥ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 90%.\n"
            "`\n"
        )
        await bot.edit_message_text(
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            text=menu_text,
            reply_markup=keyboard,
            parse_mode="Markdown",
        )
    else:
        await callback_query.answer("–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")


@dp.message_handler(lambda message: len(message.text) == 8 and message.text.isdigit())
async def process_registration_id(message: types.Message):
    global is_valid_registration_id
    is_valid_registration_id = True
    registration_id = message.text
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction"),
        InlineKeyboardButton("üí£ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª üí£", callback_data="signal")
    )
    keyboard.add(InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é", callback_data="close_menu"))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"
    await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!", reply_markup=keyboard)


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'close_menu')
async def close_menu_callback(callback_query: types.CallbackQuery):
    await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)


@dp.message_handler(lambda message: len(message.text) != 8 or not message.text.isdigit())
async def invalid_registration_id(message: types.Message):
    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π ID")


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'registration')
async def registration_callback(callback_query: types.CallbackQuery):
    # –¢–µ–∫—Å—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    registration_text = (
        "üî∑ <b>1. –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ</b> <a "
        "href='https://1wwbnd.com/casino/list?open=register'>1WIN (CLICK)</a>\n"
        "<b>–î–õ–Ø –°–¢–ê–ë–ò–õ–¨–ù–û–ô –†–ê–ë–û–¢–´ –°–û–ó–î–ê–ô–¢–ï –ù–û–í–´–ô –ê–ö–ö–ê–£–ù–¢ - —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–º</b> <code>MINES19</code>\n"
        "üî∑ <b>2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ c–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à –∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç–µ</b> (–í–∫–ª–∞–¥–∫–∞ '–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' –∏ –≤ –ø—Ä–∞–≤–æ–º "
        "–≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É"
        "–±—É–¥–µ—Ç –≤–∞—à–∏ —Ü–∏—Ñ—Ä—ã).\n"
        "üî∑ <b>3. –ò –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –±–æ—Ç—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.</b>"
    )
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", url='https://1wwbnd.com/casino/list?open=register'),
        InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    )
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.delete_message(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await bot.send_photo(
        chat_id=callback_query.message.chat.id,
        photo=open("REGISTERPHOTO.jpg", "rb"),
        caption=registration_text,
        parse_mode="HTML",
        reply_markup=keyboard
    )


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'back_to_menu')
async def back_to_menu_callback(callback_query: types.CallbackQuery):
    # –¢–µ–∫—Å—Ç —Å –º–µ–Ω—é
    menu_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî∏HAKERMINES V3.0üî∏!\n\n"
        "üí£Mines - —ç—Ç–æ –≥—ç–º–±–ª–∏–Ω–≥ –∏–≥—Ä–∞ –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ 1win, –∫–æ—Ç–æ—Ä–∞—è –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º ‚Äú–°–∞–ø—ë—Ä–µ‚Äù.\n"
        "–í–∞—à–∞ —Ü–µ–ª—å - –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —è—á–µ–π–∫–∏ –∏ –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å—Å—è –≤ –ª–æ–≤—É—à–∫–∏.\n\n"
        "`\n"
        "–ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç OpenAI.\n"
        "–û–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–≤—ë–∑–¥ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 90%.\n"
        "`\n"
    )
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("üì± –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="registration"),
        InlineKeyboardButton("üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction")
    )
    keyboard.add(InlineKeyboardButton("üí£ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª! üí£", callback_data="signal"))

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.delete_message(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é
    await bot.send_message(
        chat_id=callback_query.message.chat.id,
        text=menu_text,
        reply_markup=keyboard,
        parse_mode="Markdown",
    )


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'instruction')
async def instruction_callback(callback_query: types.CallbackQuery):
    # –¢–µ–∫—Å—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    instruction_text = (
        "–ë–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –∏ –æ–±—É—á–µ–Ω –Ω–∞ –∫–ª–∞—Å—Ç–µ—Ä–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ üñ• <b>[bitsGap]</b>.\n\n"
        "–î–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞ –±—ã–ª–æ —Å—ã–≥—Ä–∞–Ω–æ üé∞10.000+ –∏–≥—Ä.\n"
        "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–µ–ª–∞—é—Ç –≤ –¥–µ–Ω—å 15-25% –æ—Ç —Å–≤–æ–µ–≥–æ üí∏ –∫–∞–ø–∏—Ç–∞–ª–∞!\n\n"
        "<code>–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –ø–æ —Å–µ–π –¥–µ–Ω—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è! –¢–æ—á–Ω–æ—Å—Ç—å –±–æ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç "
        "90%!</code>\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏—Ç–∞ —Å–ª–µ–¥—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n\n"
        "üü¢ 1. –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ <a href='https://1wwbnd.com/casino/list?open=register'>1WIN("
        "CLICK) </a> \n"
        "–ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è - –∑–∞—Ö–æ–¥–∏–º —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º VPN (–®–≤–µ—Ü–∏—è). –í Play Market/App Store –ø–æ–ª–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, "
        "–Ω–∞–ø—Ä–∏–º–µ—Ä: Vpnify, Planet VPN, Hotspot VPN –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ!\n\n"
        "<code>–ë–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø –∫ —Å–∏–≥–Ω–∞–ª–∞–º –Ω–µ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç!</code>\n\n"
        "üü¢ 2. –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\n"
        "üü¢ 3. –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª 1win games –∏ –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É üí£'MINE'.\n\n"
        "üü¢ 4. –í—ã—Å—Ç–∞–≤–∏—Ç—å –∫–æ–ª-–≤–æ –ª–æ–≤—É—à–µ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ —Ç—Ä—ë—Ö. –≠—Ç–æ –≤–∞–∂–Ω–æ!\n\n"
        "üü¢ 5. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å–∏–≥–Ω–∞–ª –≤ –±–æ—Ç–µ –∏ —Å—Ç–∞–≤–∏—Ç—å –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º –∏–∑ –±–æ—Ç–∞.\n\n"
        "üü¢ 6. –ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ —Å–æ–≤–µ—Ç—É–µ–º —É–¥–≤–æ–∏—Ç—å(–•¬≤) —Å—Ç–∞–≤–∫—É —á—Ç–æ –±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∫—Ä—ã—Ç—å –ø–æ—Ç–µ—Ä—é –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º "
        "—Å–∏–≥–Ω–∞–ª–µ."
    )
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    )
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.delete_message(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await bot.send_photo(
        chat_id=callback_query.message.chat.id,
        photo=open("INSTRUKT.jpg", "rb"),  # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        caption=instruction_text,
        reply_markup=keyboard,
        parse_mode="HTML",
    )


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'signal')
async def signal_callback(callback_query: types.CallbackQuery):
    if not is_valid_registration_id:
        await callback_query.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –°–∏–≥–Ω–∞–ª–∞–º.",
            show_alert=True
        )
        return  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥
    # –£–¥–∞–ª—è–µ–º –º–µ–Ω—é
    await bot.delete_message(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –≤–≤–µ–¥–µ–Ω—ã 8 —Ü–∏—Ñ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    if is_valid_registration_id:
        # –ï—Å–ª–∏ –¥–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        loading_message = await bot.send_message(
            chat_id=callback_query.message.chat.id,
            text="üåê–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        for loading_text in ["üõú–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...", "‚ö†Ô∏è–ò–∑—É—á–∞—é –∑–∞–ø—Ä–æ—Å—ã..."]:
            await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            await bot.edit_message_text(
                chat_id=callback_query.message.chat.id,
                message_id=loading_message.message_id,
                text=loading_text
            )

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
        photo_files = os.listdir(photo_directory)
        if photo_files:
            random_photo_file = random.choice(photo_files)
            photo_path = os.path.join(photo_directory, random_photo_file)
            await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=loading_message.message_id)
            await bot.send_photo(
                chat_id=callback_query.message.chat.id,
                photo=open(photo_path, "rb"),
                caption="–í–æ—Ç —Å–∏–≥–Ω–∞–ª!",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üí£ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª üí£", callback_data="signal")]
                ])
            )
        else:
            await bot.send_message(
                chat_id=callback_query.message.chat.id,
                text="–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."
            )
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–µ—Å—Ç–∏ 8 —Ü–∏—Ñ—Ä
        await bot.send_message(
            chat_id=callback_query.message.chat.id,
            text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ 8 —Ü–∏—Ñ—Ä."
        )


@dp.callback_query_handler(lambda callback_query: callback_query.data == 'new_signal')
async def new_signal_callback(callback_query: types.CallbackQuery):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
    photo_files = os.listdir(photo_directory)
    if photo_files:
        random_photo_file = random.choice(photo_files)
        photo_path = os.path.join(photo_directory, random_photo_file)
        await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)
        await bot.send_photo(
            chat_id=callback_query.message.chat.id,
            photo=open(photo_path, "rb"),
            caption="–í–æ—Ç —Å–∏–≥–Ω–∞–ª!",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üí£ –í—ã–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª üí£", callback_data="new_signal")]
            ])
        )
    else:
        await bot.send_message(
            chat_id=callback_query.message.chat.id,
            text="–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."
        )


async def on_startup(dp):
    await bot.set_my_commands([
        types.BotCommand("start", "–ù–∞—á–∞—Ç—å")
    ])


async def on_shutdown(dp):
    # Close the bot's session and connector when the bot shuts down
    await bot.session.close()


if __name__ == '__main__':
    while True:
        try:
            loop = asyncio.get_event_loop()  # –ü–æ–ª—É—á–∞–µ–º —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
            loop.create_task(on_startup(dp))  # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ
            loop.run_until_complete(dp.start_polling())  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            traceback.print_exc()  # –í—ã–≤–æ–¥–∏–º traceback –æ—à–∏–±–∫–∏
            continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏
